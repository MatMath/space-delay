{"version":3,"sources":["baseData.js","gantChart/index.js","detailsInfo/index.js","App.js","serviceWorker.js","index.js"],"names":["generateDate","news","startDate","Date","eventDate","initialEstimate","expectedDelivery","finalEstimate","length","overEstimate","Math","round","overRunMonth","initialMonth","BFR","id","dependency","miniDesc","url","descriptions","type","name","cie","FH","SLS","JWT","crewDragon","project","rows","map","item","i","past","future","percentDone","now","width","height","chartType","loader","data","label","rootProps","DetailsInfo","useState","show","setShow","onClick","className","key","href","target","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.efff95aa.chunk.js","sourcesContent":["// type is for color grouping = Info, hardware...\n\nconst generateDate = (news) => {\n  const startDate = new Date(news[0].eventDate);\n  const initialEstimate = new Date(news[0].expectedDelivery);\n  const finalEstimate = new Date(news[news.length - 1].expectedDelivery);\n  const overEstimate = Math.round((finalEstimate - startDate) / (initialEstimate - startDate) * 100) - 100;\n  const overRunMonth = Math.round((finalEstimate - initialEstimate)/1000/60/60/24/30);\n  const initialMonth = Math.round((initialEstimate - startDate)/1000/60/60/24/30);\n  return {startDate, initialEstimate, finalEstimate, overEstimate, overRunMonth, initialMonth };\n}\n\nexport const BFR = () => {\n  const news = [\n    {\n      id: 'RAPT',\n      dependency: null,\n      miniDesc: 'Raptor engine',\n      eventDate: '2012-03-02',\n      expectedDelivery: '2020-01-02',\n      url: 'https://en.wikipedia.org/wiki/BFR_(rocket)',\n      descriptions: 'Initial work on Raptor announced with far away expected date of delivery.',\n      type: 'hardware',\n    },\n    {\n      id: 'START',\n      dependency: null,\n      miniDesc: 'Announcement plan',\n      eventDate: '2014-03-01',\n      expectedDelivery: '2020-01-02',\n      url: 'https://en.wikipedia.org/wiki/BFR_(rocket)',\n      descriptions: 'Initial official announcement of a future Full redesign with full reusability.',\n      type: 'Info',\n    },\n    {\n      id: 'ITS',\n      dependency: null,\n      miniDesc: 'ITS (12m)',\n      eventDate: '2016-09-01',\n      expectedDelivery: '2020-06-02',\n      url: 'https://en.wikipedia.org/wiki/ITS_launch_vehicle',\n      descriptions: 'Space conference and public initial details & timeline for ITS.',\n      type: 'Info',\n    },\n    {\n      id: 'BFR',\n      dependency: null,\n      miniDesc: 'BFR (9m)',\n      eventDate: '2017-07-01',\n      expectedDelivery: '2019-09-02',\n      url: 'https://en.wikipedia.org/wiki/BFR_(rocket)',\n      descriptions: 'Complete redesign and scale back public show in Space conference',\n      type: 'Info',\n    },\n    {\n      id: 'BFRSteel',\n      dependency: 'BFR',\n      miniDesc: 'BFR Steel switch',\n      eventDate: '2018-12-01',\n      expectedDelivery: '2019-04-02',\n      url: 'https://en.wikipedia.org/wiki/BFR_(rocket)',\n      descriptions: 'Switch to Metal and expected date of first Hop, This never flow in that time, it got delay for later in 2019',\n      type: 'delayed',\n    },\n    {\n      id: 'MK1',\n      dependency: 'BFRSteel',\n      miniDesc: 'BFR Steel Proto',\n      eventDate: '2019-06-01',\n      expectedDelivery: '2020-012-02',\n      url: 'https://en.wikipedia.org/wiki/BFR_(rocket)',\n      descriptions: 'First Hop & Display of MK1 at conference with expectation of 6month Hop & late 2020 for orbital',\n      type: 'hardware',\n    }\n  ];\n  \n  return {\n    id: 'BFR',\n    name: 'BFR',\n    descriptions: 'BFR Rocket Dev cycle',\n    cie: 'SpaceX',\n    ...generateDate(news),\n    news,\n  };\n}\n\nexport const FH = () => {\n  const news = [\n    {\n      id: 'First',\n      dependency: null,\n      miniDesc: 'Unveiling of FH',\n      eventDate: '2011-04-02',\n      expectedDelivery: '2013-06-01',\n      url: '',\n      descriptions: '',\n      type: 'Info',\n    },\n    {\n      id: 'Central_Core',\n      dependency: null,\n      miniDesc: 'Central core Fire',\n      eventDate: '2017-04-02',\n      expectedDelivery: '2017-05-02',\n      url: 'https://en.wikipedia.org/wiki/Falcon_Heavy',\n      descriptions: 'Central core test',\n      type: 'Info',\n    },\n    {\n      id: 'Launch',\n      dependency: 'Central_Core',\n      miniDesc: '1st Launch',\n      eventDate: '2018-01-06',\n      expectedDelivery: '2018-02-06',\n      url: 'https://en.wikipedia.org/wiki/Falcon_Heavy',\n      descriptions: 'First launch',\n      type: 'Info',\n    }\n  ];\n  return {\n    id: 'FR',\n    name: 'Falcon heavy',\n    descriptions: 'Falcon heavy Rocket Dev cycle',\n    cie: 'SpaceX',\n    ...generateDate(news),\n    news,\n  }\n};\n\nexport const SLS = () => {\n  const news = [\n    {\n      id: 'CP',\n      dependency: null,\n      miniDesc: 'Constellation Program unveil',\n      eventDate: '2004-01-14',\n      expectedDelivery: '2010-01-02',\n      url: 'https://www.gao.gov/new.items/d09844.pdf',\n      descriptions: 'To replace the Shuttle, expected orbit in 2010 & crew 2013 internally.',\n      type: 'Info',\n    },\n    {\n      id: 'SLS',\n      dependency: 'CP',\n      miniDesc: 'Cancel CP for SLS',\n      eventDate: '2011-09-02',\n      expectedDelivery: '2017-05-02',\n      url: 'https://en.wikipedia.org/wiki/Space_Launch_System',\n      descriptions: 'Initial SLS proposition',\n      type: 'Delayed',\n    },\n    {\n      id: 'delay',\n      dependency: 'SLS',\n      miniDesc: 'Block 2 Advance Boosters',\n      eventDate: '2019-06-02',\n      expectedDelivery: '2021-09-02',\n      url: 'https://www.theverge.com/2019/6/19/18691230/nasa-space-launch-system-orion-artemis-moon-human-exploration',\n      descriptions: 'More Delay',\n      type: 'Info',\n    }\n  ];\n  return {\n    id: 'SLS',\n    name: 'SLS',\n    descriptions: 'Space Launch System',\n    cie: 'NASA',\n    ...generateDate(news),\n    news,\n  }\n  \n};\n\n\nexport const JWT = () => {\n  const news = [\n    {\n      id: 'JWT',\n      dependency: null,\n      miniDesc: 'Constellation Program unveil',\n      eventDate: '1997-01-02',\n      expectedDelivery: '2007-01-02',\n      url: 'https://en.wikipedia.org/wiki/James_Webb_Space_Telescope',\n      descriptions: '',\n      type: 'Info',\n    },\n    {\n      id: 'Design',\n      dependency: 'JWT',\n      miniDesc: 'Preliminary Design Review',\n      eventDate: '2008-01-02',\n      expectedDelivery: '2014-01-02',\n      url: 'https://en.wikipedia.org/wiki/James_Webb_Space_Telescope',\n      descriptions: 'Update of the Design',\n      type: 'Design',\n    },\n    {\n      id: 'Review',\n      dependency: 'Design',\n      miniDesc: 'Critical Design Review',\n      eventDate: '2018-04-27',\n      expectedDelivery: '2021-01-02',\n      url: 'https://en.wikipedia.org/wiki/James_Webb_Space_Telescope',\n      descriptions: 'Critical Design Review',\n      type: 'Design',\n    }\n  ];\n  return {\n    id: 'JWT',\n    name: 'JWT',\n    descriptions: 'James Webb Space Telescope',\n    cie: 'NASA',\n    ...generateDate(news),\n    news,\n  }\n};\n\nexport const crewDragon = () => {\n  const news = [\n    {\n      id: 'First',\n      dependency: null,\n      miniDesc: 'Won contract for Dragon',\n      eventDate: '2014-09-16',\n      expectedDelivery: '2017-01-02',\n      url: 'https://www.nasa.gov/press/2014/september/nasa-chooses-american-companies-to-transport-us-astronauts-to-international',\n      descriptions: '...launching our astronauts from U.S. soil on American spacecraft and ending the nation’s sole reliance on Russia by 2017',\n      type: 'Info',\n    },\n    {\n      id: 'DragonFly',\n      dependency: null,\n      miniDesc: 'Central core Fire',\n      eventDate: '2015-10-01',\n      expectedDelivery: '2015-11-24',\n      url: 'https://en.wikipedia.org/wiki/Falcon_Heavy',\n      descriptions: 'Hover test of the DragonFly',\n      type: 'Milestone',\n    },\n    {\n      id: 'uncrew',\n      dependency: null,\n      miniDesc: 'Uncrew Orbital flight',\n      eventDate: '2015-10-02',\n      expectedDelivery: '2019-03-02',\n      url: 'https://en.wikipedia.org/wiki/Falcon_Heavy',\n      descriptions: 'First launch',\n      type: 'Milestone',\n    },\n    {\n      id: 'boom',\n      dependency: 'uncrew',\n      miniDesc: 'Explosion during testing',\n      eventDate: '2019-04-02',\n      expectedDelivery: '2019-11-15',\n      url: 'https://en.wikipedia.org/wiki/Falcon_Heavy',\n      descriptions: 'Delay to',\n      type: 'Delay',\n    },\n    {\n      id: 'escape',\n      dependency: 'boom',\n      miniDesc: 'In-flight abort test (IFAT)',\n      eventDate: '2019-10-02',\n      expectedDelivery: '2019-12-17',\n      url: 'https://en.wikipedia.org/wiki/Falcon_Heavy',\n      descriptions: 'Delay to',\n      type: 'Delay',\n    }\n  ];\n  return {\n    id: 'Dragon',\n    name: 'Crew Dragon',\n    descriptions: 'Crew dragon Dev cycle to first astronauts to ISS',\n    cie: 'SpaceX',\n    ...generateDate(news),\n    news,\n  }\n};","import React from 'react';\nimport { Chart } from \"react-google-charts\";\n\n// https://react-google-charts.com/gantt-chart\nexport default function({project}) {\n  const columns = [\n    { type: 'string', label: 'Task ID' },\n    { type: 'string', label: 'Task Name' },\n    { type: 'string', label: 'Resource' },\n    { type: 'date', label: 'Start Date' },\n    { type: 'date', label: 'End Date' },\n    { type: 'number', label: 'Duration' },\n    { type: 'number', label: 'Percent Complete' },\n    { type: 'string', label: 'Dependencies' },\n  ];\n\n  const rows = project.news.map((item, i) => {\n    const past = new Date(item.eventDate);\n    const future = new Date(item.expectedDelivery);\n    let percentDone = 0;\n    if (\n      new Date(item.expectedDelivery) < Date.now()) {\n        percentDone = 100;\n    } else {\n      percentDone = Math.round((Date.now() - past) / (future - past) *100);\n    }\n    return [\n      item.id,\n      item.miniDesc,\n      item.type,\n      past,\n      future,\n      null,\n      percentDone,\n      item.dependency,\n    ];\n  });\n\n  return (\n  <div>\n    <h1>{project.cie}: {project.descriptions}</h1>\n    <h2>{project.name} overun {project.overEstimate} % ({project.overRunMonth} month) from initial estimate of {project.initialMonth} months</h2>\n    <Chart\n      width={'100%'}\n      height={`${55*project.news.length}px`}\n      chartType=\"Gantt\"\n      loader={<div>Loading Chart</div>}\n      data={[\n        columns,\n        ...rows,\n      ]}\n      rootProps={{ 'data-testid': '1' }}\n  />\n  </div>);\n}","import React, { useState } from 'react';\n\nimport './details.css';\n\nexport default function DetailsInfo ({project}) {\n  const [show, setShow] = useState(false);\n  if (show === false) {\n    return (\n    <div>\n      <button onClick={() => setShow(true)}>Geeks Need Moar Info</button>\n    </div>);\n  }\n  return (\n    <table className='details-table'>\n      <tbody>\n        {project.news.map(item => {\n          return (\n          <tr key={item.id}>\n            <td><strong>{item.miniDesc}</strong></td>\n            <td>{(item.url?<a href={item.url} target=\"blank\">Link</a>: '')} </td>\n            <td>{item.descriptions}</td>\n          </tr>)\n        })}\n      </tbody>\n    </table>\n  );\n}","import React from 'react';\nimport './App.css';\n\nimport { BFR, FH, crewDragon, SLS, JWT } from './baseData';\n\nimport GanttChart from './gantChart';\nimport DetailsInfo from './detailsInfo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Project Delay in space</h1>\n      {[BFR(), FH(), crewDragon(), SLS(), JWT()].map(item => (\n        <div key={item.id}>\n          <GanttChart project={item}></GanttChart>\n          <br />\n          <DetailsInfo project={item}></DetailsInfo>\n          <br />\n          <hr />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}